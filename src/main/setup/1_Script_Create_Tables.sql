/* 
 * This Script will Create the Tables in the DataBase.
 * Created With DBDesigner4
 * Versión 3.0
 * Added Code column to Tables Subject and Program (19/05/2012)
 * Added the Table FORGOTTEN_PASSWORD_KEY
 *
 * Versión 2.0
 ** Modified  the relation between USER_ and CONFIRMATION_KEY
 ** Added AUTOINCREMENT to Rating Tables
*/

CREATE TABLE PROGRAM (
  ID_PROGRAM INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(50) NOT NULL,
  CODE SMALLINT UNSIGNED NOT NULL,
  PRIMARY KEY(ID_PROGRAM)
);

CREATE TABLE PROFESSOR (
  ID_PROFESSOR INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  FISRT_NAMES VARCHAR(50) NOT NULL,
  LAST_NAMES VARCHAR(50) NOT NULL,
  E_MAIL VARCHAR(50) NULL,
  DESCRIPTION VARCHAR(2000) NULL,
  URL_IMAGE VARCHAR(255) NULL,
  URL_WEB VARCHAR(255) NULL,
  PRIMARY KEY(ID_PROFESSOR)
);

CREATE TABLE PERIOD_ (
  ID_PERIOD INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  YEAR_ INT NOT NULL,
  SEMESTER INT NOT NULL,
  PRIMARY KEY(ID_PERIOD)
);

CREATE TABLE USER_ (
  ID_USER_ INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  FIRST_NAMES VARCHAR(50) NOT NULL,
  LAST_NAMES VARCHAR(50) NOT NULL,
  USER_NAME VARCHAR(20) NOT NULL,
  PASSWORD_ VARCHAR(64) NOT NULL,
  ACTIVE BIT NOT NULL DEFAULT 0,
  ROL TINYINT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY(ID_USER_)
);

CREATE TABLE TYPE_FEEDBACK (
  ID_TYPE_FEEDBACK INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(20) NOT NULL,
  PRIMARY KEY(ID_TYPE_FEEDBACK)
);

CREATE TABLE SUBJECT (
  ID_SUBJECT INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(100) NOT NULL,
  CODE MEDIUMINT UNSIGNED NOT NULL,
  DESCRIPTION VARCHAR(2000) NULL,
  PRIMARY KEY(ID_SUBJECT)
);

CREATE TABLE CONFIRMATION_KEY (
  ID_CONFIRMATION_KEY INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  ID_USER_ INTEGER UNSIGNED NOT NULL,
  EXPIRATION_DATE DATE NOT NULL,
  CONFIRMATION_KEY VARCHAR(64) NOT NULL,
  PRIMARY KEY(ID_CONFIRMATION_KEY),
  INDEX CONFIRMATION_KEY_FKIndex1(ID_USER_),
  FOREIGN KEY(ID_USER_)
    REFERENCES USER_(ID_USER_)
      ON DELETE CASCADE
      ON UPDATE NO ACTION
);

CREATE TABLE FEEDBACK (
  ID_FEEDBACK INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  ID_TYPE_FEEDBACK INTEGER UNSIGNED NOT NULL,
  CONTENT BLOB NOT NULL,
  DATE_FEEDBACK DATETIME NOT NULL,
  PRIMARY KEY(ID_FEEDBACK),
  INDEX FEEDBACK_FKIndex1(ID_TYPE_FEEDBACK),
  FOREIGN KEY(ID_TYPE_FEEDBACK)
    REFERENCES TYPE_FEEDBACK(ID_TYPE_FEEDBACK)
      ON DELETE RESTRICT
      ON UPDATE NO ACTION
);

CREATE TABLE FORGOTTEN_PASSWORD_KEY (
  ID_FORGOTTEN_PASSWORD_KEY INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  ID_USER_ INTEGER UNSIGNED NOT NULL,
  KEY_ VARCHAR(64) NOT NULL,
  EXPIRATION_DATE DATETIME NOT NULL,
  PRIMARY KEY(ID_FORGOTTEN_PASSWORD_KEY),
  INDEX FORGOTTEN_PASSWORD_KEY_FKIndex1(ID_USER_),
  FOREIGN KEY(ID_USER_)
    REFERENCES USER_(ID_USER_)
      ON DELETE NO CASCADE
      ON UPDATE NO ACTION
);

CREATE TABLE SUBJECT_RATING (
  ID_SUBJECT_RATING INTEGER UNSIGNED NOT NULL,
  ID_SUBJECT INTEGER UNSIGNED NOT NULL,
  ID_USER_ INTEGER UNSIGNED NOT NULL,
  RATING TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY(ID_SUBJECT_RATING),
  INDEX USER__has_SUBJECT_FKIndex1(ID_USER_),
  INDEX USER__has_SUBJECT_FKIndex2(ID_SUBJECT),
  FOREIGN KEY(ID_USER_)
    REFERENCES USER_(ID_USER_)
      ON DELETE CASCADE
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_SUBJECT)
    REFERENCES SUBJECT(ID_SUBJECT)
      ON DELETE CASCADE
      ON UPDATE NO ACTION
);

CREATE TABLE PROFESSOR_RATING (
  ID_PROFESSOR_RATING INTEGER UNSIGNED NOT NULL,
  ID_PROFESSOR INTEGER UNSIGNED NOT NULL,
  ID_USER_ INTEGER UNSIGNED NOT NULL,
  RATING TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY(ID_PROFESSOR_RATING),
  INDEX USER__has_PROFESSOR_FKIndex1(ID_USER_),
  INDEX USER__has_PROFESSOR_FKIndex2(ID_PROFESSOR),
  FOREIGN KEY(ID_USER_)
    REFERENCES USER_(ID_USER_)
      ON DELETE CASCADE
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_PROFESSOR)
    REFERENCES PROFESSOR(ID_PROFESSOR)
      ON DELETE CASCADE
      ON UPDATE NO ACTION
);

CREATE TABLE USER_PROGRAM (
  ID_USER_PROGRAM INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  ID_USER_ INTEGER UNSIGNED NOT NULL,
  ID_PROGRAM INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(ID_USER_PROGRAM),
  INDEX USER_COURSE_FKIndex1(ID_USER_),
  INDEX USER_COURSE_FKIndex2(ID_PROGRAM),
  FOREIGN KEY(ID_USER_)
    REFERENCES USER_(ID_USER_)
      ON DELETE CASCADE
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_PROGRAM)
    REFERENCES PROGRAM(ID_PROGRAM)
      ON DELETE CASCADE
      ON UPDATE NO ACTION
);

CREATE TABLE COURSE (
  ID_COURSE INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  ID_PROFESSOR INTEGER UNSIGNED NOT NULL,
  ID_SUBJECT INTEGER UNSIGNED NOT NULL,
  ID_PERIOD INTEGER UNSIGNED NOT NULL,
  AVERAGE FLOAT NOT NULL DEFAULT 0,
  RATINGCOUNT INTEGER UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY(ID_COURSE),
  INDEX TEACHER_SUBJECT_PERIOD_FKIndex2(ID_SUBJECT),
  INDEX TEACHER_SUBJECT_PERIOD_FKIndex3(ID_PERIOD),
  INDEX PROFESSOR_SUBJECT_PERIOD_FKIndex3(ID_PROFESSOR),
  FOREIGN KEY(ID_PROFESSOR)
    REFERENCES PROFESSOR(ID_PROFESSOR)
      ON DELETE CASCADE
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_SUBJECT)
    REFERENCES SUBJECT(ID_SUBJECT)
      ON DELETE CASCADE
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_PERIOD)
    REFERENCES PERIOD_(ID_PERIOD)
      ON DELETE CASCADE
      ON UPDATE NO ACTION
);

CREATE TABLE COMMENT_ (
  ID_COMMENT_ INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  ID_USER_ INTEGER UNSIGNED NULL,
  ID_COURSE INTEGER UNSIGNED NOT NULL,
  CONTENT VARCHAR(2000) NOT NULL,
  DATE_COMMENT DATETIME NOT NULL,
  RATING FLOAT NOT NULL,
  ANONYMOUS CHAR NOT NULL DEFAULT 0,
  PRIMARY KEY(ID_COMMENT_),
  INDEX COMENT_FKIndex2(ID_COURSE),
  INDEX COMMENT__FKIndex2(ID_USER_),
  FOREIGN KEY(ID_COURSE)
    REFERENCES COURSE(ID_COURSE)
      ON DELETE CASCADE
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_USER_)
    REFERENCES USER_(ID_USER_)
      ON DELETE CASCADE
      ON UPDATE NO ACTION
);

CREATE TABLE COMMENT_RATING (
  ID_COMMENT_RATING INTEGER UNSIGNED NOT NULL,
  ID_COMMENT_ INTEGER UNSIGNED NOT NULL,
  ID_USER_ INTEGER UNSIGNED NOT NULL,
  RATING INTEGER NOT NULL DEFAULT 0,
  PRIMARY KEY(ID_COMMENT_RATING),
  INDEX USER__has_COMMENT__FKIndex1(ID_USER_),
  INDEX USER__has_COMMENT__FKIndex2(ID_COMMENT_),
  FOREIGN KEY(ID_USER_)
    REFERENCES USER_(ID_USER_)
      ON DELETE CASCADE
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_COMMENT_)
    REFERENCES COMMENT_(ID_COMMENT_)
      ON DELETE CASCADE
      ON UPDATE NO ACTION
);

CREATE TABLE COURSE_RATING (
  ID_COURSE_RATING INTEGER UNSIGNED NOT NULL,
  ID_COURSE INTEGER UNSIGNED NOT NULL,
  ID_USER_ INTEGER UNSIGNED NOT NULL,
  RATING FLOAT NOT NULL DEFAULT 0,
  PRIMARY KEY(ID_COURSE_RATING),
  INDEX USER__has_COURSE_FKIndex1(ID_USER_),
  INDEX USER__has_COURSE_FKIndex2(ID_COURSE),
  FOREIGN KEY(ID_USER_)
    REFERENCES USER_(ID_USER_)
      ON DELETE CASCADE
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_COURSE)
    REFERENCES COURSE(ID_COURSE)
      ON DELETE CASCADE
      ON UPDATE NO ACTION
);